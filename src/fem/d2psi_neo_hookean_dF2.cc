#include "d2psi_neo_hookean_dF2.h"

namespace nm::fem {
    auto d2PsiNeoHookeanDf2(const mat3r &F, real mu, real lambda) -> mat99r {
        mat99r H;

        const real F1_1 = F(0, 0);
        const real F1_2 = F(0, 1);
        const real F1_3 = F(0, 2);
        const real F2_1 = F(1, 0);
        const real F2_2 = F(1, 1);
        const real F2_3 = F(1, 2);
        const real F3_1 = F(2, 0);
        const real F3_2 = F(2, 1);
        const real F3_3 = F(2, 2);

        H(0, 0) = mu * (pow(F2_2 * F3_3 - F2_3 * F3_2, 2.0) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0 +
                        2.0) +
                  lambda * pow(F2_2 * F3_3 - F2_3 * F3_2, 2.0) * 2.0;
        H(0, 1) = lambda * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_2 * F3_3 - F2_3 * F3_2) * -2.0 -
                  mu * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(0, 2) = lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
                  mu * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(0, 3) = lambda * (F2_1 * F3_3 - F2_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * -2.0 -
                  mu * (F2_1 * F3_3 - F2_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(0, 4) = -mu * ((F3_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                         (F1_1 * F3_3 - F1_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) +
                  lambda * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 -
                  F3_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(0, 5) = mu * ((F2_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                        (F1_1 * F2_3 - F1_3 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) -
                  lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
                  F2_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(0, 6) = lambda * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
                  mu * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(0, 7) = mu * ((F3_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                        (F1_1 * F3_2 - F1_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) -
                  lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
                  F3_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(0, 8) = -mu * ((F2_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                         (F1_1 * F2_2 - F1_2 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) +
                  lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 -
                  F2_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(1, 0) = lambda * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_2 * F3_3 - F2_3 * F3_2) * -2.0 -
                  mu * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(1, 1) = mu * (pow(F1_2 * F3_3 - F1_3 * F3_2, 2.0) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0 +
                        2.0) +
                  lambda * pow(F1_2 * F3_3 - F1_3 * F3_2, 2.0) * 2.0;
        H(1, 2) = lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_2 * F3_3 - F1_3 * F3_2) * -2.0 -
                  mu * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(1, 3) = mu * ((F3_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                        (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) +
                  lambda * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
                  F3_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(1, 4) = lambda * (F1_1 * F3_3 - F1_3 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * -2.0 -
                  mu * (F1_1 * F3_3 - F1_3 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(1, 5) = -mu * ((F1_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                         (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) +
                  lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 -
                  F1_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(1, 6) = -mu * ((F3_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                         (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) -
                  lambda * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 -
                  F3_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(1, 7) = lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 +
                  mu * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(1, 8) = mu * ((F1_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                        (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) -
                  lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 +
                  F1_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(2, 0) = lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
                  mu * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(2, 1) = lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_2 * F3_3 - F1_3 * F3_2) * -2.0 -
                  mu * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(2, 2) = mu * (pow(F1_2 * F2_3 - F1_3 * F2_2, 2.0) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0 +
                        2.0) +
                  lambda * pow(F1_2 * F2_3 - F1_3 * F2_2, 2.0) * 2.0;
        H(2, 3) = -mu * ((F2_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                         (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) -
                  lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 -
                  F2_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(2, 4) = mu * ((F1_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                        (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) +
                  lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_3 - F1_3 * F3_1) * 2.0 +
                  F1_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(2, 5) = lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * -2.0 -
                  mu * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(2, 6) = mu * ((F2_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                        (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) +
                  lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
                  F2_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(2, 7) = -mu * ((F1_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                         (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) -
                  lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_2 - F1_2 * F3_1) * 2.0 -
                  F1_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(2, 8) = lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 2.0 +
                  mu * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(3, 0) = lambda * (F2_1 * F3_3 - F2_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * -2.0 -
                  mu * (F2_1 * F3_3 - F2_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(3, 1) = mu * ((F3_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                        (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) +
                  lambda * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
                  F3_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(3, 2) = -mu * ((F2_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                         (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) -
                  lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 -
                  F2_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(3, 3) = mu * (pow(F2_1 * F3_3 - F2_3 * F3_1, 2.0) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0 +
                        2.0) +
                  lambda * pow(F2_1 * F3_3 - F2_3 * F3_1, 2.0) * 2.0;
        H(3, 4) = lambda * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * -2.0 -
                  mu * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(3, 5) = lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
                  mu * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(3, 6) = lambda * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * -2.0 -
                  mu * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(3, 7) = -mu * ((F3_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                         (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) +
                  lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 -
                  F3_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(3, 8) = mu * ((F2_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                        (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) -
                  lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
                  F2_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(4, 0) = -mu * ((F3_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                         (F1_1 * F3_3 - F1_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) +
                  lambda * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 -
                  F3_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(4, 1) = lambda * (F1_1 * F3_3 - F1_3 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * -2.0 -
                  mu * (F1_1 * F3_3 - F1_3 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(4, 2) = mu * ((F1_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                        (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) +
                  lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_3 - F1_3 * F3_1) * 2.0 +
                  F1_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(4, 3) = lambda * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * -2.0 -
                  mu * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(4, 4) = mu * (pow(F1_1 * F3_3 - F1_3 * F3_1, 2.0) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0 +
                        2.0) +
                  lambda * pow(F1_1 * F3_3 - F1_3 * F3_1, 2.0) * 2.0;
        H(4, 5) = lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * -2.0 -
                  mu * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(4, 6) = mu * ((F3_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                        (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) +
                  lambda * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
                  F3_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(4, 7) = lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_1 * F3_3 - F1_3 * F3_1) * -2.0 -
                  mu * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(4, 8) = -mu * ((F1_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                         (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) +
                  lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 2.0 -
                  F1_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(5, 0) = mu * ((F2_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                        (F1_1 * F2_3 - F1_3 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) -
                  lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
                  F2_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(5, 1) = -mu * ((F1_3 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                         (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) +
                  lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 -
                  F1_3 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(5, 2) = lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * -2.0 -
                  mu * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(5, 3) = lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
                  mu * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(5, 4) = lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * -2.0 -
                  mu * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(5, 5) = mu * (pow(F1_1 * F2_3 - F1_3 * F2_1, 2.0) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0 +
                        2.0) +
                  lambda * pow(F1_1 * F2_3 - F1_3 * F2_1, 2.0) * 2.0;
        H(5, 6) = -mu * ((F2_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                         (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) -
                  lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 -
                  F2_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(5, 7) = mu * ((F1_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                        (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) +
                  lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 2.0 +
                  F1_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(5, 8) = lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F2_3 - F1_3 * F2_1) * -2.0 -
                  mu * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F2_3 - F1_3 * F2_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(6, 0) = lambda * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
                  mu * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(6, 1) = -mu * ((F3_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                         (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) -
                  lambda * (F1_2 * F3_3 - F1_3 * F3_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 -
                  F3_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(6, 2) = mu * ((F2_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                        (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) +
                  lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
                  F2_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(6, 3) = lambda * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * -2.0 -
                  mu * (F2_1 * F3_2 - F2_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(6, 4) = mu * ((F3_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                        (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) +
                  lambda * (F1_1 * F3_3 - F1_3 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
                  F3_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(6, 5) = -mu * ((F2_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                         (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) -
                  lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 -
                  F2_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(6, 6) = mu * (pow(F2_1 * F3_2 - F2_2 * F3_1, 2.0) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0 +
                        2.0) +
                  lambda * pow(F2_1 * F3_2 - F2_2 * F3_1, 2.0) * 2.0;
        H(6, 7) = lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * -2.0 -
                  mu * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(6, 8) = lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
                  mu * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(7, 0) = mu * ((F3_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                        (F1_1 * F3_2 - F1_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) -
                  lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 +
                  F3_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(7, 1) = lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 +
                  mu * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(7, 2) = -mu * ((F1_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                         (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) -
                  lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (F1_1 * F3_2 - F1_2 * F3_1) * 2.0 -
                  F1_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(7, 3) = -mu * ((F3_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                         (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) +
                  lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 -
                  F3_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(7, 4) = lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_1 * F3_3 - F1_3 * F3_1) * -2.0 -
                  mu * (F1_1 * F3_2 - F1_2 * F3_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(7, 5) = mu * ((F1_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) +
                        (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) +
                  lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 2.0 +
                  F1_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(7, 6) = lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * -2.0 -
                  mu * (F1_1 * F3_2 - F1_2 * F3_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(7, 7) = mu * (pow(F1_1 * F3_2 - F1_2 * F3_1, 2.0) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0 +
                        2.0) +
                  lambda * pow(F1_1 * F3_2 - F1_2 * F3_1, 2.0) * 2.0;
        H(7, 8) = lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * -2.0 -
                  mu * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(8, 0) = -mu * ((F2_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                         (F1_1 * F2_2 - F1_2 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) +
                  lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_2 * F3_3 - F2_3 * F3_2) * 2.0 -
                  F2_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(8, 1) = mu * ((F1_2 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                        (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) -
                  lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F3_3 - F1_3 * F3_2) * 2.0 +
                  F1_2 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(8, 2) = lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 2.0 +
                  mu * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_2 * F2_3 - F1_3 * F2_2) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(8, 3) = mu * ((F2_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                        F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                        (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0) -
                  lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_3 - F2_3 * F3_1) * 2.0 +
                  F2_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(8, 4) = -mu * ((F1_1 * 2.0) / (F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 +
                                         F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1) -
                         (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 /
                                 pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                             F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                     2.0) *
                                 2.0) +
                  lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_3 - F1_3 * F3_1) * 2.0 -
                  F1_1 * lambda *
                          (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 -
                           F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) *
                          2.0;
        H(8, 5) = lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F2_3 - F1_3 * F2_1) * -2.0 -
                  mu * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F2_3 - F1_3 * F2_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(8, 6) = lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 2.0 +
                  mu * (F1_1 * F2_2 - F1_2 * F2_1) * (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(8, 7) = lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * -2.0 -
                  mu * (F1_1 * F2_2 - F1_2 * F2_1) * (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 /
                          pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                      F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                              2.0) *
                          2.0;
        H(8, 8) = mu * (pow(F1_1 * F2_2 - F1_2 * F2_1, 2.0) * 1.0 /
                                pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 +
                                            F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1,
                                    2.0) *
                                2.0 +
                        2.0) +
                  lambda * pow(F1_1 * F2_2 - F1_2 * F2_1, 2.0) * 2.0;
        return H;
    }
}// namespace nm::fem
