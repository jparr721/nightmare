#include "d2psi_neo_hookean_dF2.h"

namespace nm::fem {
    auto d2PsiNeoHookeanDf2(const mat3r &F, real mu, real lambda) -> mat99r {
        mat99r H;

        const real params1 = mu;
        const real params2 = lambda;

        const real f11 = F(0, 0);
        const real f12 = F(0, 1);
        const real f13 = F(0, 2);
        const real f21 = F(1, 0);
        const real f22 = F(1, 1);
        const real f23 = F(1, 2);
        const real f31 = F(2, 0);
        const real f32 = F(2, 1);
        const real f33 = F(2, 2);

        H(0, 0) = params1 * (pow(f22 * f33 - f23 * f32, 2.0) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0 +
                             2.0) +
                  params2 * pow(f22 * f33 - f23 * f32, 2.0) * 2.0;
        H(0, 1) = params2 * (f12 * f33 - f13 * f32) * (f22 * f33 - f23 * f32) * -2.0 -
                  params1 * (f12 * f33 - f13 * f32) * (f22 * f33 - f23 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(0, 2) = params2 * (f12 * f23 - f13 * f22) * (f22 * f33 - f23 * f32) * 2.0 +
                  params1 * (f12 * f23 - f13 * f22) * (f22 * f33 - f23 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(0, 3) = params2 * (f21 * f33 - f23 * f31) * (f22 * f33 - f23 * f32) * -2.0 -
                  params1 * (f21 * f33 - f23 * f31) * (f22 * f33 - f23 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(0, 4) = -params1 * ((f33 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) -
                              (f11 * f33 - f13 * f31) * (f22 * f33 - f23 * f32) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) +
                  params2 * (f11 * f33 - f13 * f31) * (f22 * f33 - f23 * f32) * 2.0 -
                  f33 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(0, 5) = params1 * ((f23 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) -
                             (f11 * f23 - f13 * f21) * (f22 * f33 - f23 * f32) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) -
                  params2 * (f11 * f23 - f13 * f21) * (f22 * f33 - f23 * f32) * 2.0 +
                  f23 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(0, 6) = params2 * (f21 * f32 - f22 * f31) * (f22 * f33 - f23 * f32) * 2.0 +
                  params1 * (f21 * f32 - f22 * f31) * (f22 * f33 - f23 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(0, 7) = params1 * ((f32 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) -
                             (f11 * f32 - f12 * f31) * (f22 * f33 - f23 * f32) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) -
                  params2 * (f11 * f32 - f12 * f31) * (f22 * f33 - f23 * f32) * 2.0 +
                  f32 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(0, 8) = -params1 * ((f22 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) -
                              (f11 * f22 - f12 * f21) * (f22 * f33 - f23 * f32) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) +
                  params2 * (f11 * f22 - f12 * f21) * (f22 * f33 - f23 * f32) * 2.0 -
                  f22 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(1, 0) = params2 * (f12 * f33 - f13 * f32) * (f22 * f33 - f23 * f32) * -2.0 -
                  params1 * (f12 * f33 - f13 * f32) * (f22 * f33 - f23 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(1, 1) = params1 * (pow(f12 * f33 - f13 * f32, 2.0) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0 +
                             2.0) +
                  params2 * pow(f12 * f33 - f13 * f32, 2.0) * 2.0;
        H(1, 2) = params2 * (f12 * f23 - f13 * f22) * (f12 * f33 - f13 * f32) * -2.0 -
                  params1 * (f12 * f23 - f13 * f22) * (f12 * f33 - f13 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(1, 3) = params1 * ((f33 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) +
                             (f12 * f33 - f13 * f32) * (f21 * f33 - f23 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) +
                  params2 * (f12 * f33 - f13 * f32) * (f21 * f33 - f23 * f31) * 2.0 +
                  f33 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(1, 4) = params2 * (f11 * f33 - f13 * f31) * (f12 * f33 - f13 * f32) * -2.0 -
                  params1 * (f11 * f33 - f13 * f31) * (f12 * f33 - f13 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(1, 5) = -params1 * ((f13 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) -
                              (f11 * f23 - f13 * f21) * (f12 * f33 - f13 * f32) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) +
                  params2 * (f11 * f23 - f13 * f21) * (f12 * f33 - f13 * f32) * 2.0 -
                  f13 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(1, 6) = -params1 * ((f32 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) +
                              (f12 * f33 - f13 * f32) * (f21 * f32 - f22 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) -
                  params2 * (f12 * f33 - f13 * f32) * (f21 * f32 - f22 * f31) * 2.0 -
                  f32 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(1, 7) = params2 * (f11 * f32 - f12 * f31) * (f12 * f33 - f13 * f32) * 2.0 +
                  params1 * (f11 * f32 - f12 * f31) * (f12 * f33 - f13 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(1, 8) = params1 * ((f12 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) -
                             (f11 * f22 - f12 * f21) * (f12 * f33 - f13 * f32) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) -
                  params2 * (f11 * f22 - f12 * f21) * (f12 * f33 - f13 * f32) * 2.0 +
                  f12 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(2, 0) = params2 * (f12 * f23 - f13 * f22) * (f22 * f33 - f23 * f32) * 2.0 +
                  params1 * (f12 * f23 - f13 * f22) * (f22 * f33 - f23 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(2, 1) = params2 * (f12 * f23 - f13 * f22) * (f12 * f33 - f13 * f32) * -2.0 -
                  params1 * (f12 * f23 - f13 * f22) * (f12 * f33 - f13 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(2, 2) = params1 * (pow(f12 * f23 - f13 * f22, 2.0) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0 +
                             2.0) +
                  params2 * pow(f12 * f23 - f13 * f22, 2.0) * 2.0;
        H(2, 3) = -params1 * ((f23 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) +
                              (f12 * f23 - f13 * f22) * (f21 * f33 - f23 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) -
                  params2 * (f12 * f23 - f13 * f22) * (f21 * f33 - f23 * f31) * 2.0 -
                  f23 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(2, 4) = params1 * ((f13 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) +
                             (f12 * f23 - f13 * f22) * (f11 * f33 - f13 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) +
                  params2 * (f12 * f23 - f13 * f22) * (f11 * f33 - f13 * f31) * 2.0 +
                  f13 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(2, 5) = params2 * (f11 * f23 - f13 * f21) * (f12 * f23 - f13 * f22) * -2.0 -
                  params1 * (f11 * f23 - f13 * f21) * (f12 * f23 - f13 * f22) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(2, 6) = params1 * ((f22 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) +
                             (f12 * f23 - f13 * f22) * (f21 * f32 - f22 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) +
                  params2 * (f12 * f23 - f13 * f22) * (f21 * f32 - f22 * f31) * 2.0 +
                  f22 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(2, 7) = -params1 * ((f12 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) +
                              (f12 * f23 - f13 * f22) * (f11 * f32 - f12 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) -
                  params2 * (f12 * f23 - f13 * f22) * (f11 * f32 - f12 * f31) * 2.0 -
                  f12 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(2, 8) = params2 * (f11 * f22 - f12 * f21) * (f12 * f23 - f13 * f22) * 2.0 +
                  params1 * (f11 * f22 - f12 * f21) * (f12 * f23 - f13 * f22) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(3, 0) = params2 * (f21 * f33 - f23 * f31) * (f22 * f33 - f23 * f32) * -2.0 -
                  params1 * (f21 * f33 - f23 * f31) * (f22 * f33 - f23 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(3, 1) = params1 * ((f33 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) +
                             (f12 * f33 - f13 * f32) * (f21 * f33 - f23 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) +
                  params2 * (f12 * f33 - f13 * f32) * (f21 * f33 - f23 * f31) * 2.0 +
                  f33 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(3, 2) = -params1 * ((f23 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) +
                              (f12 * f23 - f13 * f22) * (f21 * f33 - f23 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) -
                  params2 * (f12 * f23 - f13 * f22) * (f21 * f33 - f23 * f31) * 2.0 -
                  f23 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(3, 3) = params1 * (pow(f21 * f33 - f23 * f31, 2.0) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0 +
                             2.0) +
                  params2 * pow(f21 * f33 - f23 * f31, 2.0) * 2.0;
        H(3, 4) = params2 * (f11 * f33 - f13 * f31) * (f21 * f33 - f23 * f31) * -2.0 -
                  params1 * (f11 * f33 - f13 * f31) * (f21 * f33 - f23 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(3, 5) = params2 * (f11 * f23 - f13 * f21) * (f21 * f33 - f23 * f31) * 2.0 +
                  params1 * (f11 * f23 - f13 * f21) * (f21 * f33 - f23 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(3, 6) = params2 * (f21 * f32 - f22 * f31) * (f21 * f33 - f23 * f31) * -2.0 -
                  params1 * (f21 * f32 - f22 * f31) * (f21 * f33 - f23 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(3, 7) = -params1 * ((f31 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) -
                              (f11 * f32 - f12 * f31) * (f21 * f33 - f23 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) +
                  params2 * (f11 * f32 - f12 * f31) * (f21 * f33 - f23 * f31) * 2.0 -
                  f31 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(3, 8) = params1 * ((f21 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) -
                             (f11 * f22 - f12 * f21) * (f21 * f33 - f23 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) -
                  params2 * (f11 * f22 - f12 * f21) * (f21 * f33 - f23 * f31) * 2.0 +
                  f21 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(4, 0) = -params1 * ((f33 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) -
                              (f11 * f33 - f13 * f31) * (f22 * f33 - f23 * f32) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) +
                  params2 * (f11 * f33 - f13 * f31) * (f22 * f33 - f23 * f32) * 2.0 -
                  f33 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(4, 1) = params2 * (f11 * f33 - f13 * f31) * (f12 * f33 - f13 * f32) * -2.0 -
                  params1 * (f11 * f33 - f13 * f31) * (f12 * f33 - f13 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(4, 2) = params1 * ((f13 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) +
                             (f12 * f23 - f13 * f22) * (f11 * f33 - f13 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) +
                  params2 * (f12 * f23 - f13 * f22) * (f11 * f33 - f13 * f31) * 2.0 +
                  f13 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(4, 3) = params2 * (f11 * f33 - f13 * f31) * (f21 * f33 - f23 * f31) * -2.0 -
                  params1 * (f11 * f33 - f13 * f31) * (f21 * f33 - f23 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(4, 4) = params1 * (pow(f11 * f33 - f13 * f31, 2.0) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0 +
                             2.0) +
                  params2 * pow(f11 * f33 - f13 * f31, 2.0) * 2.0;
        H(4, 5) = params2 * (f11 * f23 - f13 * f21) * (f11 * f33 - f13 * f31) * -2.0 -
                  params1 * (f11 * f23 - f13 * f21) * (f11 * f33 - f13 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(4, 6) = params1 * ((f31 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) +
                             (f11 * f33 - f13 * f31) * (f21 * f32 - f22 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) +
                  params2 * (f11 * f33 - f13 * f31) * (f21 * f32 - f22 * f31) * 2.0 +
                  f31 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(4, 7) = params2 * (f11 * f32 - f12 * f31) * (f11 * f33 - f13 * f31) * -2.0 -
                  params1 * (f11 * f32 - f12 * f31) * (f11 * f33 - f13 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(4, 8) = -params1 * ((f11 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) -
                              (f11 * f22 - f12 * f21) * (f11 * f33 - f13 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) +
                  params2 * (f11 * f22 - f12 * f21) * (f11 * f33 - f13 * f31) * 2.0 -
                  f11 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(5, 0) = params1 * ((f23 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) -
                             (f11 * f23 - f13 * f21) * (f22 * f33 - f23 * f32) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) -
                  params2 * (f11 * f23 - f13 * f21) * (f22 * f33 - f23 * f32) * 2.0 +
                  f23 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(5, 1) = -params1 * ((f13 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) -
                              (f11 * f23 - f13 * f21) * (f12 * f33 - f13 * f32) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) +
                  params2 * (f11 * f23 - f13 * f21) * (f12 * f33 - f13 * f32) * 2.0 -
                  f13 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(5, 2) = params2 * (f11 * f23 - f13 * f21) * (f12 * f23 - f13 * f22) * -2.0 -
                  params1 * (f11 * f23 - f13 * f21) * (f12 * f23 - f13 * f22) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(5, 3) = params2 * (f11 * f23 - f13 * f21) * (f21 * f33 - f23 * f31) * 2.0 +
                  params1 * (f11 * f23 - f13 * f21) * (f21 * f33 - f23 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(5, 4) = params2 * (f11 * f23 - f13 * f21) * (f11 * f33 - f13 * f31) * -2.0 -
                  params1 * (f11 * f23 - f13 * f21) * (f11 * f33 - f13 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(5, 5) = params1 * (pow(f11 * f23 - f13 * f21, 2.0) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0 +
                             2.0) +
                  params2 * pow(f11 * f23 - f13 * f21, 2.0) * 2.0;
        H(5, 6) = -params1 * ((f21 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) +
                              (f11 * f23 - f13 * f21) * (f21 * f32 - f22 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) -
                  params2 * (f11 * f23 - f13 * f21) * (f21 * f32 - f22 * f31) * 2.0 -
                  f21 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(5, 7) = params1 * ((f11 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) +
                             (f11 * f23 - f13 * f21) * (f11 * f32 - f12 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) +
                  params2 * (f11 * f23 - f13 * f21) * (f11 * f32 - f12 * f31) * 2.0 +
                  f11 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(5, 8) = params2 * (f11 * f22 - f12 * f21) * (f11 * f23 - f13 * f21) * -2.0 -
                  params1 * (f11 * f22 - f12 * f21) * (f11 * f23 - f13 * f21) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(6, 0) = params2 * (f21 * f32 - f22 * f31) * (f22 * f33 - f23 * f32) * 2.0 +
                  params1 * (f21 * f32 - f22 * f31) * (f22 * f33 - f23 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(6, 1) = -params1 * ((f32 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) +
                              (f12 * f33 - f13 * f32) * (f21 * f32 - f22 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) -
                  params2 * (f12 * f33 - f13 * f32) * (f21 * f32 - f22 * f31) * 2.0 -
                  f32 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(6, 2) = params1 * ((f22 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) +
                             (f12 * f23 - f13 * f22) * (f21 * f32 - f22 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) +
                  params2 * (f12 * f23 - f13 * f22) * (f21 * f32 - f22 * f31) * 2.0 +
                  f22 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(6, 3) = params2 * (f21 * f32 - f22 * f31) * (f21 * f33 - f23 * f31) * -2.0 -
                  params1 * (f21 * f32 - f22 * f31) * (f21 * f33 - f23 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(6, 4) = params1 * ((f31 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) +
                             (f11 * f33 - f13 * f31) * (f21 * f32 - f22 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) +
                  params2 * (f11 * f33 - f13 * f31) * (f21 * f32 - f22 * f31) * 2.0 +
                  f31 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(6, 5) = -params1 * ((f21 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) +
                              (f11 * f23 - f13 * f21) * (f21 * f32 - f22 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) -
                  params2 * (f11 * f23 - f13 * f21) * (f21 * f32 - f22 * f31) * 2.0 -
                  f21 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(6, 6) = params1 * (pow(f21 * f32 - f22 * f31, 2.0) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0 +
                             2.0) +
                  params2 * pow(f21 * f32 - f22 * f31, 2.0) * 2.0;
        H(6, 7) = params2 * (f11 * f32 - f12 * f31) * (f21 * f32 - f22 * f31) * -2.0 -
                  params1 * (f11 * f32 - f12 * f31) * (f21 * f32 - f22 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(6, 8) = params2 * (f11 * f22 - f12 * f21) * (f21 * f32 - f22 * f31) * 2.0 +
                  params1 * (f11 * f22 - f12 * f21) * (f21 * f32 - f22 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(7, 0) = params1 * ((f32 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) -
                             (f11 * f32 - f12 * f31) * (f22 * f33 - f23 * f32) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) -
                  params2 * (f11 * f32 - f12 * f31) * (f22 * f33 - f23 * f32) * 2.0 +
                  f32 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(7, 1) = params2 * (f11 * f32 - f12 * f31) * (f12 * f33 - f13 * f32) * 2.0 +
                  params1 * (f11 * f32 - f12 * f31) * (f12 * f33 - f13 * f32) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(7, 2) = -params1 * ((f12 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) +
                              (f12 * f23 - f13 * f22) * (f11 * f32 - f12 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) -
                  params2 * (f12 * f23 - f13 * f22) * (f11 * f32 - f12 * f31) * 2.0 -
                  f12 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(7, 3) = -params1 * ((f31 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) -
                              (f11 * f32 - f12 * f31) * (f21 * f33 - f23 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) +
                  params2 * (f11 * f32 - f12 * f31) * (f21 * f33 - f23 * f31) * 2.0 -
                  f31 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(7, 4) = params2 * (f11 * f32 - f12 * f31) * (f11 * f33 - f13 * f31) * -2.0 -
                  params1 * (f11 * f32 - f12 * f31) * (f11 * f33 - f13 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(7, 5) = params1 * ((f11 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) +
                             (f11 * f23 - f13 * f21) * (f11 * f32 - f12 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) +
                  params2 * (f11 * f23 - f13 * f21) * (f11 * f32 - f12 * f31) * 2.0 +
                  f11 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(7, 6) = params2 * (f11 * f32 - f12 * f31) * (f21 * f32 - f22 * f31) * -2.0 -
                  params1 * (f11 * f32 - f12 * f31) * (f21 * f32 - f22 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(7, 7) = params1 * (pow(f11 * f32 - f12 * f31, 2.0) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0 +
                             2.0) +
                  params2 * pow(f11 * f32 - f12 * f31, 2.0) * 2.0;
        H(7, 8) = params2 * (f11 * f22 - f12 * f21) * (f11 * f32 - f12 * f31) * -2.0 -
                  params1 * (f11 * f22 - f12 * f21) * (f11 * f32 - f12 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(8, 0) = -params1 * ((f22 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) -
                              (f11 * f22 - f12 * f21) * (f22 * f33 - f23 * f32) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) +
                  params2 * (f11 * f22 - f12 * f21) * (f22 * f33 - f23 * f32) * 2.0 -
                  f22 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(8, 1) = params1 * ((f12 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) -
                             (f11 * f22 - f12 * f21) * (f12 * f33 - f13 * f32) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) -
                  params2 * (f11 * f22 - f12 * f21) * (f12 * f33 - f13 * f32) * 2.0 +
                  f12 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(8, 2) = params2 * (f11 * f22 - f12 * f21) * (f12 * f23 - f13 * f22) * 2.0 +
                  params1 * (f11 * f22 - f12 * f21) * (f12 * f23 - f13 * f22) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(8, 3) = params1 * ((f21 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                            f13 * f21 * f32 - f13 * f22 * f31) -
                             (f11 * f22 - f12 * f21) * (f21 * f33 - f23 * f31) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0) -
                  params2 * (f11 * f22 - f12 * f21) * (f21 * f33 - f23 * f31) * 2.0 +
                  f21 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(8, 4) = -params1 * ((f11 * 2.0) / (f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                             f13 * f21 * f32 - f13 * f22 * f31) -
                              (f11 * f22 - f12 * f21) * (f11 * f33 - f13 * f31) * 1.0 /
                                      pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                  f13 * f21 * f32 - f13 * f22 * f31,
                                          2.0) *
                                      2.0) +
                  params2 * (f11 * f22 - f12 * f21) * (f11 * f33 - f13 * f31) * 2.0 -
                  f11 * params2 *
                          (-f11 * f22 * f33 + f11 * f23 * f32 + f12 * f21 * f33 - f12 * f23 * f31 - f13 * f21 * f32 +
                           f13 * f22 * f31 + 1.0) *
                          2.0;
        H(8, 5) = params2 * (f11 * f22 - f12 * f21) * (f11 * f23 - f13 * f21) * -2.0 -
                  params1 * (f11 * f22 - f12 * f21) * (f11 * f23 - f13 * f21) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(8, 6) = params2 * (f11 * f22 - f12 * f21) * (f21 * f32 - f22 * f31) * 2.0 +
                  params1 * (f11 * f22 - f12 * f21) * (f21 * f32 - f22 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(8, 7) = params2 * (f11 * f22 - f12 * f21) * (f11 * f32 - f12 * f31) * -2.0 -
                  params1 * (f11 * f22 - f12 * f21) * (f11 * f32 - f12 * f31) * 1.0 /
                          pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 + f13 * f21 * f32 -
                                      f13 * f22 * f31,
                              2.0) *
                          2.0;
        H(8, 8) = params1 * (pow(f11 * f22 - f12 * f21, 2.0) * 1.0 /
                                     pow(f11 * f22 * f33 - f11 * f23 * f32 - f12 * f21 * f33 + f12 * f23 * f31 +
                                                 f13 * f21 * f32 - f13 * f22 * f31,
                                         2.0) *
                                     2.0 +
                             2.0) +
                  params2 * pow(f11 * f22 - f12 * f21, 2.0) * 2.0;
        return H;
    }
}// namespace nm::fem
